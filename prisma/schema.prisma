// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String        @db.VarChar(64)
  nip         String        @db.Char(18)
  password    String        @db.VarChar(255)
  role        String        @default("employee") @db.VarChar(64)
  UserMeet    UserMeet[]
  UserProject UserProject[]
  Task        Task[]
  UserTask    UserTask[]
}

model Meet {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(128)
  start       DateTime   @db.DateTime
  duration    Int        @db.Int
  link        String     @db.VarChar(255)
  description String     @db.LongText
  UserMeet    UserMeet[]
}

model UserMeet {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  meet   Meet @relation(fields: [meetId], references: [id])
  meetId Int
}

model Project {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(128)
  startdate   DateTime      @db.Date
  enddate     DateTime      @db.Date
  description String        @db.LongText
  archived    Boolean       @db.TinyInt()
  UserProject UserProject[]
  Task        Task[]
}

model UserProject {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
}

model Task {
  id                Int        @id @default(autoincrement())
  title             String     @db.VarChar(128)
  duedate           DateTime   @db.Date
  priority          Int        @db.Int
  description       String     @db.LongText
  status            Int        @db.Int
  taskfile          String     @db.VarChar(255)
  project           Project    @relation(fields: [projectId], references: [id])
  projectId         Int
  penanggungJawab   User       @relation(fields: [penanggungJawabId], references: [id])
  penanggungJawabId Int
  UserTask          UserTask[]
}

model UserTask {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  task   Task @relation(fields: [taskId], references: [id])
  taskId Int
}
